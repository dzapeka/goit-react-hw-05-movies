{"version":3,"file":"static/js/921.ffeca1b8.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","js/themoviedb-api.js","components/SearchMoviesForm/SearchMoviesForm.styled.js","components/SearchMoviesForm/SearchMoviesForm.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  padding-left: 0px;\n  margin-top: 15px;\n`;\n\nexport const StyledListItem = styled.li`\n  position: relative;\n  padding-left: 20px;\n\n  &::before {\n    content: 'â€¢';\n    color: #0174be;\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    font-size: 1.5em;\n  }\n\n  &:hover {\n    &::before {\n      color: #ff9130;\n    }\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: 0.02em;\n\n  &:hover {\n    color: #ff9130;\n  }\n`;\n","import React from 'react';\nimport { StyledLink, StyledList, StyledListItem } from './MoviesList.styled';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <>\n      {movies.length > 0 && (\n        <StyledList>\n          {movies.map(({ id, title, name }) => (\n            <StyledListItem key={id}>\n              <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n                {title || name}\n              </StyledLink>\n            </StyledListItem>\n          ))}\n        </StyledList>\n      )}\n    </>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  max-width: 1200px;\n  padding: 15px 15px;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nexport const StyledSectionTitle = styled.h2``;\n","import React from 'react';\nimport { StyledSection, StyledSectionTitle } from './Section.styled';\n\nconst Section = ({ children, title = false }) => {\n  return (\n    <StyledSection>\n      {title && <StyledSectionTitle>{title}</StyledSectionTitle>}\n      {children}\n    </StyledSection>\n  );\n};\nexport default Section;\n","import axios from 'axios';\n\nconst AUTH_TOKEN =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5OGZkNjgyMzgzZDExNWRmZGM3NjMxOGQzMTZkNDUxNCIsInN1YiI6IjY1NDk3ZjE3MzkxYjljMDExZDJmYTE2MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.0LXtY5S_ODGIpkS6EqgxTD40UljZNo8t5hY8kE5hiG0';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p';\nexport const DEFAULT_IMG_PLACEHOLDER =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${AUTH_TOKEN}`,\n  },\n  params: {\n    language: 'en-US',\n  },\n});\n\nconst fetchData = async (endpoint, params = {}) => {\n  const response = await axiosInstance.get(endpoint, { params });\n  return response.data;\n};\n\nexport const fetchTranding = () => fetchData('/trending/movie/day');\nexport const fetchDetails = movieId => fetchData(`/movie/${movieId}`);\nexport const fetchCredits = movieId => fetchData(`/movie/${movieId}/credits`);\nexport const fetchReviews = movieId => fetchData(`/movie/${movieId}/reviews`);\n\nexport const searchMovie = (query, page = 1) =>\n  fetchData('/search/movie', {\n    query,\n    include_adult: false,\n    language: 'en-US',\n    page,\n  });\n","import styled from 'styled-components';\n\nexport const StyledInput = styled.input`\n  padding: 4px;\n  width: 300px;\n`;\n\nexport const StyledSearchButton = styled.button`\n  text-transform: uppercase;\n  font-weight: 600;\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  gap: 4px;\n`;\n","import {\n  StyledForm,\n  StyledInput,\n  StyledSearchButton,\n} from './SearchMoviesForm.styled';\n\nconst SearchForm = ({ onSubmit }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({\n      searchQuery: event.currentTarget.elements.searchQuery.value.trim(),\n    });\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <StyledInput\n        type=\"text\"\n        autoComplete=\"off\"\n        name=\"searchQuery\"\n        placeholder=\"Search movies...\"\n        autoFocus\n        required\n      />\n      <StyledSearchButton type=\"submit\">Search</StyledSearchButton>\n    </StyledForm>\n  );\n};\n\nexport default SearchForm;\n","import Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchForm from 'components/SearchMoviesForm/SearchMoviesForm';\nimport Section from 'components/Section/Section';\nimport { searchMovie } from 'js/themoviedb-api';\nimport { Notify } from 'notiflix';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const location = useLocation();\n\n  const searchQuery = searchParams.get('query');\n\n  const onSearchFormSubmit = ({ searchQuery }) =>\n    setSearchParams({ query: searchQuery });\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    const searchMovies = async () => {\n      try {\n        setIsLoading(true);\n        const { results } = await searchMovie(searchQuery);\n        if (results.length === 0) {\n          Notify.info('No movies found. Please try a different search.');\n        }\n        setMovies(results);\n      } catch (error) {\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    searchMovies();\n  }, [searchQuery]);\n\n  return (\n    <Section>\n      <SearchForm onSubmit={searchQuery => onSearchFormSubmit(searchQuery)} />\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {movies.length > 0 && (\n            <MoviesList movies={movies} location={location} />\n          )}\n        </>\n      )}\n    </Section>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["StyledList","styled","_templateObject","_taggedTemplateLiteral","StyledListItem","_templateObject2","StyledLink","Link","_templateObject3","_ref","movies","location","_jsx","_Fragment","children","length","map","_ref2","id","title","name","to","concat","state","from","StyledSection","StyledSectionTitle","_ref$title","_jsxs","IMAGE_BASE_URL","DEFAULT_IMG_PLACEHOLDER","axiosInstance","axios","baseURL","headers","accept","Authorization","params","language","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","endpoint","response","_args","arguments","_context","prev","next","undefined","get","sent","abrupt","data","stop","_x","apply","fetchTranding","fetchDetails","movieId","fetchCredits","fetchReviews","searchMovie","query","page","include_adult","StyledInput","StyledSearchButton","StyledForm","onSubmit","event","preventDefault","searchQuery","currentTarget","elements","value","trim","type","autoComplete","placeholder","autoFocus","required","_useState","useState","_useState2","_slicedToArray","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","isLoading","setIsLoading","useLocation","useEffect","searchMovies","_yield$searchMovie","results","Notify","t0","finish","Section","SearchForm","onSearchFormSubmit","Loader","MoviesList"],"sourceRoot":""}