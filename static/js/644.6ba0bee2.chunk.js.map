{"version":3,"file":"static/js/644.6ba0bee2.chunk.js","mappings":"0QAEaA,EAAcC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sDAKvBC,EAAaH,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kC,SCalC,EAjBoB,SAAHG,GAAqB,IAAfC,EAAOD,EAAPC,QACrB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGH,EAAQI,OAAS,IAChBH,EAAAA,EAAAA,KAAA,MAAAE,SACGH,EAAQK,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAAO,OACjCC,EAAAA,EAAAA,MAAA,MAAAP,SAAA,EACEO,EAAAA,EAAAA,MAACjB,EAAW,CAAAU,SAAA,CAAC,WAASK,MACtBP,EAAAA,EAAAA,KAACJ,EAAU,CAAAM,SAAEM,MAFNF,EAGJ,OAMjB,E,8BC4BA,EAvCoB,WAClB,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCb,EAAOe,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAmB9B,OAjBAG,EAAAA,EAAAA,YAAU,WACR,GAAKX,EAAL,CACA,IAAMY,EAAc,eAAAxB,GAAAyB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEA,OAFAF,EAAAC,KAAA,EAEnBT,GAAa,GAAMQ,EAAAE,KAAA,GACOC,EAAAA,EAAAA,IAAarB,GAAS,KAAD,EAAAgB,EAAAE,EAAAI,KAAvCL,EAAOD,EAAPC,QACRX,EAAWW,GAASC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEpBM,EAAAA,OAAAA,QAAe,6BAA6B,QAExB,OAFwBN,EAAAC,KAAA,GAE5CT,GAAa,GAAOQ,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAX,EAAA,wBAEvB,kBAVmB,OAAA3B,EAAAuC,MAAA,KAAAC,UAAA,KAYpBhB,GAboB,CActB,GAAG,CAACZ,KAGFV,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGiB,GACCnB,EAAAA,EAAAA,KAACuC,EAAAA,EAAM,KAEPvC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGH,EAAQI,OAAS,GAChBH,EAAAA,EAAAA,KAACwC,EAAW,CAACzC,QAASA,IAEtB,+CAMZ,C","sources":["components/ReviewsList/ReviewsList.styles.js","components/ReviewsList/ReviewsList.jsx","pages/ReviewsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledTitle = styled.h3`\n  margin-bottom: 4px;\n  font-weight: 500;\n`;\n\nexport const StyledText = styled.p`\n  margin-bottom: 24px;\n`;\n","import React from 'react';\nimport { StyledText, StyledTitle } from './ReviewsList.styles';\n\nconst ReviewsList = ({ reviews }) => {\n  return (\n    <>\n      {reviews.length > 0 && (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <StyledTitle>Author: {author}</StyledTitle>\n              <StyledText>{content}</StyledText>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default ReviewsList;\n","import Loader from 'components/Loader/Loader';\nimport ReviewsList from 'components/ReviewsList/ReviewsList';\nimport { fetchReviews } from 'js/themoviedb-api';\nimport { Notify } from 'notiflix';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst ReviewsPage = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovieCast = async () => {\n      try {\n        setIsLoading(true);\n        const { results } = await fetchReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        Notify.failure('Unable to load movie cast');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {reviews.length > 0 ? (\n            <ReviewsList reviews={reviews} />\n          ) : (\n            'We do not have any reviews for this movie'\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ReviewsPage;\n"],"names":["StyledTitle","styled","_templateObject","_taggedTemplateLiteral","StyledText","_templateObject2","_ref","reviews","_jsx","_Fragment","children","length","map","_ref2","id","author","content","_jsxs","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setReviews","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchMovieCast","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchReviews","results","_context","prev","next","fetchReviews","sent","t0","Notify","finish","stop","apply","arguments","Loader","ReviewsList"],"sourceRoot":""}